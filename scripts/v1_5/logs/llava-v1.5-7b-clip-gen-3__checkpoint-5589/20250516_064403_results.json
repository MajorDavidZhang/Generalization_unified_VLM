{
  "results": {
    "gqa": {
      "alias": "gqa",
      "exact_match,none": 0.6203688980760057,
      "exact_match_stderr,none": 0.004327303645452255
    },
    "mmbench_en": {
      " ": " ",
      "alias": "mmbench_en"
    },
    "mmbench_en_dev": {
      "alias": " - mmbench_en_dev",
      "gpt_eval_score,none": 62.45704467353952,
      "gpt_eval_score_stderr,none": "N/A",
      "submission,none": null,
      "submission_stderr,none": "N/A"
    },
    "mmbench_en_test": {
      "alias": " - mmbench_en_test",
      "gpt_eval_score,none": [],
      "gpt_eval_score_stderr,none": [],
      "submission,none": null,
      "submission_stderr,none": "N/A"
    },
    "mme": {
      "alias": "mme",
      "mme_cognition_score,none": 306.7857142857143,
      "mme_cognition_score_stderr,none": "N/A",
      "mme_perception_score,none": 1469.9777911164465,
      "mme_perception_score_stderr,none": "N/A"
    },
    "mmstar": {
      "alias": "mmstar",
      "coarse perception,none": 0.6209926731546498,
      "coarse perception_stderr,none": "N/A",
      "average,none": 0.33583509519223137,
      "average_stderr,none": "N/A",
      "fine-grained perception,none": 0.24821296978629329,
      "fine-grained perception_stderr,none": "N/A",
      "instance reasoning,none": 0.39036370714514973,
      "instance reasoning_stderr,none": "N/A",
      "logical reasoning,none": 0.30129628347450127,
      "logical reasoning_stderr,none": "N/A",
      "math,none": 0.2528791321393567,
      "math_stderr,none": "N/A",
      "science & technology,none": 0.20126580545343767,
      "science & technology_stderr,none": "N/A"
    },
    "mmvet": {
      "alias": "mmvet",
      "gpt_eval_score,none": 0.0,
      "gpt_eval_score_stderr,none": "N/A"
    },
    "vizwiz_vqa": {
      " ": " ",
      "alias": "vizwiz_vqa"
    },
    "vizwiz_vqa_test": {
      "alias": " - vizwiz_vqa_test",
      "exact_match,none": [],
      "exact_match_stderr,none": [],
      "submission,none": null,
      "submission_stderr,none": "N/A"
    },
    "vizwiz_vqa_val": {
      "alias": " - vizwiz_vqa_val",
      "exact_match,none": 0.556355637879138,
      "exact_match_stderr,none": 0.006862218565834583,
      "submission,none": [],
      "submission_stderr,none": []
    }
  },
  "group_subtasks": {
    "gqa": [],
    "mmbench_en": [
      "mmbench_en_dev",
      "mmbench_en_test"
    ],
    "mme": [],
    "mmstar": [],
    "mmvet": [],
    "vizwiz_vqa": [
      "vizwiz_vqa_val",
      "vizwiz_vqa_test"
    ]
  },
  "configs": {
    "gqa": {
      "task": "gqa",
      "dataset_path": "lmms-lab/GQA",
      "dataset_name": "testdev_balanced_instructions",
      "dataset_kwargs": {
        "token": true
      },
      "test_split": "testdev",
      "full_docs": false,
      "process_results_use_image": false,
      "doc_to_visual": "<function gqa_doc_to_visual at 0x7f4d2dfc9b80>",
      "doc_to_text": "<function gqa_doc_to_text at 0x7f4d2dfc9dc0>",
      "doc_to_target": "answer",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "max_new_tokens": 16,
        "temperature": 0.0,
        "top_p": 1.0,
        "num_beams": 1,
        "do_sample": false,
        "until": [
          "\n\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": [
        {
          "version": 0.0
        }
      ],
      "lmms_eval_specific_kwargs": {
        "default": {
          "pre_prompt": "",
          "post_prompt": "\nAnswer the question using a single word or phrase."
        },
        "qwen_vl": {
          "pre_prompt": "",
          "post_prompt": " Answer:"
        },
        "pre_prompt": "",
        "post_prompt": "\nAnswer the question using a single word or phrase."
      }
    },
    "mmbench_en_dev": {
      "task": "mmbench_en_dev",
      "dataset_path": "lmms-lab/MMBench",
      "dataset_name": "en",
      "dataset_kwargs": {
        "token": true
      },
      "test_split": "dev",
      "full_docs": false,
      "process_results_use_image": false,
      "doc_to_visual": "<function mmbench_doc_to_visual at 0x7f4d2dfb2280>",
      "doc_to_text": "<function mmbench_doc_to_text at 0x7f4d2dfb2940>",
      "doc_to_target": "answer",
      "process_results": "<function mmbench_process_results at 0x7f4d2dfb2ee0>",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "gpt_eval_score",
          "aggregation": "<function mmbench_aggregate_dev_results_eval at 0x7f4d2df9ea60>",
          "higher_is_better": true
        },
        {
          "metric": "submission",
          "aggregation": "<function mmbench_aggregate_dev_results_submission at 0x7f4d2dfb2040>",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "ASSISTANT:"
        ],
        "max_new_tokens": 1024,
        "temperature": 0.0,
        "top_p": 1.0,
        "num_beams": 1,
        "do_sample": false,
        "image_aspect_ratio": "original"
      },
      "repeats": 1,
      "should_decontaminate": false,
      "lmms_eval_specific_kwargs": {
        "default": {
          "pre_prompt": "",
          "post_prompt": "\nAnswer with the option's letter from the given choices directly."
        },
        "pre_prompt": "",
        "post_prompt": "\nAnswer with the option's letter from the given choices directly."
      },
      "model_specific_generation_kwargs": {
        "llava": {
          "image_aspect_ratio": "original"
        }
      }
    },
    "mmbench_en_test": {
      "task": "mmbench_en_test",
      "dataset_path": "lmms-lab/MMBench",
      "dataset_name": "en",
      "dataset_kwargs": {
        "token": true
      },
      "test_split": "test",
      "full_docs": false,
      "process_results_use_image": false,
      "doc_to_visual": "<function mmbench_doc_to_visual at 0x7f4d2defe820>",
      "doc_to_text": "<function mmbench_doc_to_text at 0x7f4d2defeee0>",
      "doc_to_target": "answer",
      "process_results": "<function mmbench_process_results at 0x7f4d2de854c0>",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "submission",
          "aggregation": "<function mmbench_aggregate_test_results at 0x7f4d2dec5940>",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "ASSISTANT:"
        ],
        "max_new_tokens": 1024,
        "temperature": 0.0,
        "top_p": 1.0,
        "num_beams": 1,
        "do_sample": false,
        "image_aspect_ratio": "original"
      },
      "repeats": 1,
      "should_decontaminate": false,
      "lmms_eval_specific_kwargs": {
        "default": {
          "pre_prompt": "",
          "post_prompt": "\nAnswer with the option's letter from the given choices directly."
        },
        "pre_prompt": "",
        "post_prompt": "\nAnswer with the option's letter from the given choices directly."
      },
      "model_specific_generation_kwargs": {
        "llava": {
          "image_aspect_ratio": "original"
        }
      }
    },
    "mme": {
      "task": "mme",
      "dataset_path": "lmms-lab/MME",
      "dataset_kwargs": {
        "token": true
      },
      "test_split": "test",
      "full_docs": false,
      "process_results_use_image": false,
      "doc_to_visual": "<function mme_doc_to_visual at 0x7f4d49ea7e50>",
      "doc_to_text": "<function mme_doc_to_text at 0x7f4d2db859d0>",
      "doc_to_target": "answer",
      "process_results": "<function mme_process_results at 0x7f4d2db85d30>",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "mme_perception_score",
          "aggregation": "<function mme_aggregate_results at 0x7f4d2db91280>",
          "higher_is_better": true
        },
        {
          "metric": "mme_cognition_score",
          "aggregation": "<function mme_aggregate_results at 0x7f4d2db91700>",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "max_new_tokens": 16,
        "temperature": 0.0,
        "top_p": 1.0,
        "num_beams": 1,
        "do_sample": false,
        "until": [
          "\n\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": [
        {
          "version": 0.0
        }
      ],
      "lmms_eval_specific_kwargs": {
        "default": {
          "pre_prompt": "",
          "post_prompt": "\nAnswer the question using a single word or phrase."
        },
        "gpt4v": {
          "pre_prompt": "",
          "post_prompt": "\nAnswer the question with Yes or No."
        },
        "qwen_vl": {
          "pre_prompt": "",
          "post_prompt": " Answer:"
        },
        "otterhd": {
          "pre_prompt": "",
          "post_prompt": " Answer:"
        },
        "xcomposer2_4khd": {
          "pre_prompt": "[UNUSED_TOKEN_146]user\n",
          "post_prompt": " Answer this question briefly[UNUSED_TOKEN_145]\n[UNUSED_TOKEN_146]assistant\n"
        },
        "plm": {
          "pre_prompt": "",
          "post_prompt": ""
        },
        "pre_prompt": "",
        "post_prompt": "\nAnswer the question using a single word or phrase."
      }
    },
    "mmstar": {
      "task": "mmstar",
      "dataset_path": "Lin-Chen/MMStar",
      "dataset_kwargs": {
        "token": true
      },
      "test_split": "val",
      "full_docs": false,
      "process_results_use_image": false,
      "doc_to_visual": "<function mmstar_doc_to_visual at 0x7f4d2db85820>",
      "doc_to_text": "<function mmstar_doc_to_text at 0x7f4d2db91af0>",
      "doc_to_target": "answer",
      "process_results": "<function mmstar_process_results at 0x7f4d2dbb6040>",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "coarse perception",
          "aggregation": "<function mmstar_aggregate_results at 0x7f4d2dbb64c0>",
          "higher_is_better": true
        },
        {
          "metric": "fine-grained perception",
          "aggregation": "<function mmstar_aggregate_results at 0x7f4d2dbb68b0>",
          "higher_is_better": true
        },
        {
          "metric": "instance reasoning",
          "aggregation": "<function mmstar_aggregate_results at 0x7f4d2dbb6ca0>",
          "higher_is_better": true
        },
        {
          "metric": "logical reasoning",
          "aggregation": "<function mmstar_aggregate_results at 0x7f4d2dbba0d0>",
          "higher_is_better": true
        },
        {
          "metric": "science & technology",
          "aggregation": "<function mmstar_aggregate_results at 0x7f4d2dbba4c0>",
          "higher_is_better": true
        },
        {
          "metric": "math",
          "aggregation": "<function mmstar_aggregate_results at 0x7f4d2dbba8b0>",
          "higher_is_better": true
        },
        {
          "metric": "average",
          "aggregation": "<function mmstar_aggregate_results at 0x7f4d2dbbaca0>",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n\n"
        ],
        "do_sample": false
      },
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": [
        {
          "version": 0.0
        }
      ],
      "lmms_eval_specific_kwargs": {
        "default": {
          "pre_prompt": "",
          "post_prompt": "\nAnswer with the option's letter from the given choices directly"
        },
        "pre_prompt": "",
        "post_prompt": "\nAnswer with the option's letter from the given choices directly"
      }
    },
    "mmvet": {
      "task": "mmvet",
      "dataset_path": "lmms-lab/MMVet",
      "dataset_kwargs": {
        "token": true
      },
      "test_split": "test",
      "full_docs": false,
      "process_results_use_image": false,
      "doc_to_visual": "<function mmvet_doc_to_visual at 0x7f4d2db93670>",
      "doc_to_text": "<function doc_to_text at 0x7f4d2db939d0>",
      "doc_to_target": "{{answer}}",
      "process_results": "<function mmvet_process_results at 0x7f4d2db93ca0>",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "gpt_eval_score",
          "aggregation": "<function mmvet_aggregate_results at 0x7f4d2db52160>",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "max_new_tokens": 1024,
        "temperature": 0.2,
        "top_p": 1.0,
        "num_beams": 1,
        "do_sample": false,
        "until": [
          "\n\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "gpt_eval_model_name": "gpt-4-0613"
      },
      "lmms_eval_specific_kwargs": {
        "default": {
          "pre_prompt": "First please perform reasoning, and think step by step to provide best answer to the following question: \n\n",
          "post_prompt": ""
        },
        "pre_prompt": "First please perform reasoning, and think step by step to provide best answer to the following question: \n\n",
        "post_prompt": ""
      }
    },
    "vizwiz_vqa_test": {
      "task": "vizwiz_vqa_test",
      "dataset_path": "lmms-lab/VizWiz-VQA",
      "test_split": "test",
      "full_docs": false,
      "process_results_use_image": false,
      "doc_to_visual": "<function vizwiz_vqa_doc_to_visual at 0x7f4d2db63820>",
      "doc_to_text": "<function vizwiz_vqa_doc_to_text at 0x7f4d2db523a0>",
      "doc_to_target": "answer",
      "process_results": "<function vizwiz_vqa_process_results at 0x7f4d2db52ee0>",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "submission",
          "aggregation": "<function vizwiz_vqa_aggregate_submissions at 0x7f4d2db63670>",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "ASSISTANT:"
        ]
      },
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": [
        {
          "version": 0.0
        }
      ],
      "lmms_eval_specific_kwargs": {
        "default": {
          "pre_prompt": "",
          "post_prompt": "\nWhen the provided information is insufficient, respond with 'Unanswerable'.\nAnswer the question using a single word or phrase."
        },
        "pre_prompt": "",
        "post_prompt": "\nWhen the provided information is insufficient, respond with 'Unanswerable'.\nAnswer the question using a single word or phrase."
      }
    },
    "vizwiz_vqa_val": {
      "task": "vizwiz_vqa_val",
      "dataset_path": "lmms-lab/VizWiz-VQA",
      "test_split": "val",
      "full_docs": false,
      "process_results_use_image": false,
      "doc_to_visual": "<function vizwiz_vqa_doc_to_visual at 0x7f4d2dac5af0>",
      "doc_to_text": "<function vizwiz_vqa_doc_to_text at 0x7f4d2dad0040>",
      "doc_to_target": "answer",
      "process_results": "<function vizwiz_vqa_process_results at 0x7f4d2dad0310>",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "ASSISTANT:"
        ]
      },
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": [
        {
          "version": 0.0
        }
      ],
      "lmms_eval_specific_kwargs": {
        "default": {
          "pre_prompt": "",
          "post_prompt": "\nWhen the provided information is insufficient, respond with 'Unanswerable'.\nAnswer the question using a single word or phrase."
        },
        "pre_prompt": "",
        "post_prompt": "\nWhen the provided information is insufficient, respond with 'Unanswerable'.\nAnswer the question using a single word or phrase."
      }
    }
  },
  "versions": {
    "gqa": "Yaml",
    "mmbench_en_dev": "Yaml",
    "mmbench_en_test": "Yaml",
    "mme": "Yaml",
    "mmstar": "Yaml",
    "mmvet": 0.0,
    "vizwiz_vqa_test": "Yaml",
    "vizwiz_vqa_val": "Yaml"
  },
  "n-shot": {
    "gqa": 0,
    "mmbench_en_dev": 0,
    "mmbench_en_test": 0,
    "mme": 0,
    "mmstar": 0,
    "mmvet": 0,
    "vizwiz_vqa_test": 0,
    "vizwiz_vqa_val": 0
  },
  "higher_is_better": {
    "gqa": {
      "exact_match": true
    },
    "mmbench_en": {
      "exact_match": true,
      "submission": true,
      "gpt_eval_score": true
    },
    "mmbench_en_dev": {
      "gpt_eval_score": true,
      "submission": true
    },
    "mmbench_en_test": {
      "submission": true
    },
    "mme": {
      "mme_perception_score": true,
      "mme_cognition_score": true
    },
    "mmstar": {
      "coarse perception": true,
      "fine-grained perception": true,
      "instance reasoning": true,
      "logical reasoning": true,
      "science & technology": true,
      "math": true,
      "average": true
    },
    "mmvet": {
      "gpt_eval_score": true
    },
    "vizwiz_vqa": {
      "exact_match": true,
      "submission": true,
      "gpt_eval_score": true
    },
    "vizwiz_vqa_test": {
      "submission": true
    },
    "vizwiz_vqa_val": {
      "exact_match": true
    }
  },
  "n-samples": {
    "vizwiz_vqa_val": {
      "original": 4319,
      "effective": 4319
    },
    "vizwiz_vqa_test": {
      "original": 8000,
      "effective": 8000
    },
    "mmvet": {
      "original": 218,
      "effective": 218
    },
    "mmstar": {
      "original": 1500,
      "effective": 1500
    },
    "mme": {
      "original": 2374,
      "effective": 2374
    },
    "mmbench_en_dev": {
      "original": 4329,
      "effective": 4329
    },
    "mmbench_en_test": {
      "original": 6666,
      "effective": 6666
    },
    "gqa": {
      "original": 12578,
      "effective": 12578
    }
  },
  "config": {
    "model": "llava",
    "model_args": "pretrained=/public_data/jihai/understanding/scripts/v1_5/checkpoints/llava-v1.5-7b-clip-gen-3/checkpoint-5589",
    "batch_size": "1",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": "",
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "f28f1df",
  "date": "20250516_064403",
  "task_hashes": {
    "vizwiz_vqa_val": "309050356405511a59fd936472d123fd8e96405bef5a1fc6b9ad602f5a447005",
    "vizwiz_vqa_test": "a23695fd25122a7aafbf78d3459d0cfe885da8562572b6e81f763804b8c1d9dd",
    "mmvet": "5441f413e7b70fe9cca34b6c5eebe9022c70a7479cccb52113c5f6aac7f9637d",
    "mmstar": "c071f18b96d772719d8402c730ecdc67ba5838be9ad10c9f4dac96c33c351e88",
    "mme": "37a6daf3517a230d3fbe10eee9b020f60e53e79498ec84fb917164c92c811b19",
    "mmbench_en_dev": "6009dab29953252fa9f49286f9f86af2c216c28400bf4ce6db38ad017778c7c7",
    "mmbench_en_test": "9588958bddc355273931dae37f28c04fe0123e8b6a2bcf3e2b09a073c5fc7a56",
    "gqa": "e580b1e054d4e89e04fb2f1fd5cc2312052185d34a4a525bf5f037484037309d"
  },
  "model_source": "llava",
  "model_name": "/public_data/jihai/understanding/scripts/v1_5/checkpoints/llava-v1.5-7b-clip-gen-3/checkpoint-5589",
  "model_name_sanitized": "llava-v1.5-7b-clip-gen-3__checkpoint-5589",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 3675277.98866108,
  "end_time": 3675956.485248809,
  "total_evaluation_time_seconds": "678.4965877290815"
}